#
# f32 <-> s32 <-> s8 <-> u8
#
--idt=f32,s32,s8,u8
--odt=f32,s32,s8,u8

--attr=oscale=per_dim_1:0.
--itag=nchw,nhwc,nChw4c,nChw8c,nChw16c
--otag=nchw,nhwc,nChw8c,nChw16c
2x64x3x3

--attr=oscale=per_dim_0:0.
--itag=oihw,hwio
--otag=oihw,hwio
2x64x3x3

--attr=oscale=per_dim_01:0.
--itag=goihw,gOIhw16i16o
--otag=goihw,gOIhw16i16o
3x32x32x2x2

--itag=nChw4c,nChw8c --otag=nChw16c 2x40x3x3   # blocked with tail
--itag=nChw16c --otag=nChw8c  2x40x3x3         # blocked with tail

--attr=oscale=common:0.
--itag=ncw,nwc
--otag=ncw,nwc
2x8x8 # special 8x8 kernel

--itag=nchw,nhwc,nChw4c,nChw8c,nChw16c
--otag=nchw,nhwc,nChw4c,nChw8c,nChw16c
2x64x3x3

--itag=oihw,hwio
--otag=oihw,hwio
2x64x3x3

# simple nChw{8,16}c impl
--itag=nChw4c,nChw8c --otag=nChw16c 2x71x16x16 2x72x16x16 2x73x16x16
--itag=nChw16c --otag=nChw8c  2x71x16x16 2x72x16x16 2x73x16x16

#
# s8, f32 -> s8 w/ compensations
#
--reset
--alg=bootstrap
--idt=f32,s8
--odt=s8

--itag=hwio --otag=hwio,OIhw4i16o4i
32x32x3x3
--oflag=conv_s8s8 32x32x3x3

--itag=hwigo --oflag=gconv_s8s8
--otag=hwigo 2x32x32x3x3
--otag=gOIhw4i16o4i 2x32x32x3x3
--otag=gOIhw4o4i 2x36x36x3x3
--otag=gOIhw2i8o4i 2x40x40x3x3
--otag=Goihw16g 512x1x1x3x3

--batch=test_bf16
